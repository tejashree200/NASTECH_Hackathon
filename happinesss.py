# -*- coding: utf-8 -*-
"""Happinesss.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s4chW64YnbUMjBqEG4_jyWTux364P19F
"""

import numpy as np
import pandas as pd

df = pd.read_csv('world-happiness-report.csv')
df1 = pd.read_csv('world-happiness-report-2021.csv')

df

df1

# eda df

df.info()

df.describe()

df.duplicated().sum()

#eda df1

df1.info()

df1.describe()

df1.duplicated().sum()

df['year'].unique()  #no of years that we have data for

df['Country name'].nunique()

df1['Country name'].nunique()   #some(17) countries are missing in year 2021 report.

country_df = df['Country name'].unique()
country_df1 = df1['Country name'].unique()

country_df.tolist()
country_df1.tolist()

left_out_country = []
count = 0;
for i in country_df[:]:
  if i not in country_df1:
    left_out_country.append(i)
    count += 1
print(left_out_country)
print(count)

dict = {}
df_left_out_country = pd.DataFrame(dict)
for i in left_out_country:
  df3 = df.loc[df['Country name'] == i]
  df_left_out_country = df_left_out_country.append(df3)

df_left_out_country

"""Plotting bar graph for the leftout countries:"""

from itertools import groupby
import matplotlib.pyplot as plt
plt.figure(figsize=(25,15))
plt.bar(df_left_out_country['Country name'] , df_left_out_country['Life Ladder'])
plt.show()

plt.figure(figsize=(25,15))
sns.barplot(x=df_left_out_country['Country name'], y=df_left_out_country['Life Ladder'])
plt.xticks(rotation= 90)
plt.xlabel('Country name')
plt.ylabel('Happiness Score')
plt.show()

import seaborn as sns
plt.figure(figsize=(25,15))
sns.barplot(x=df['Country name'], y=df['Life Ladder'])
plt.xticks(rotation= 90)
plt.xlabel('Country name')
plt.ylabel('Happiness Score')
plt.show()

df_2005 = df.loc[df['year'] == 2005]
df_2005.sort_values(by=['Life Ladder'],  ascending=False)

df_2006 = df.loc[df['year'] == 2006]
df_2006.sort_values(by=['Life Ladder'],  ascending=False)

df1.info()

"""**Happiest Countries**                        
In 2021 , Finland is most happiest and Afghanisthan is least happy country.
"""

plt.figure(figsize=(25,15))
sns.barplot(x=df1['Country name'], y=df1['Ladder score'])
plt.xticks(rotation= 90)
plt.xlabel('Country name')
plt.ylabel('Happiness Score')
plt.show()                   # In 2021 , Finland is most happiest and Afghanisthan is least happy country.

"""**Top 5 Most Happiest Countries:**

1.Finland  
2.Denmark     
3.Switzerland   
4.Iceland          
5.Netherlands

**Top 5 Least Happiest Countries:**

1.Afghanisthan             
2.Zimbabwe                
3.Rwanda              
4.Botswana                  
5.Lesotho

**Based On Regional Indicator**                  
In the below plot, we can see conrasting difference between Sub-Saharan Africa Region and the Western Europe Region. The number of countries may be a deciding factor.
"""

sns.countplot(data = df1, x = "Regional indicator")
plt.xticks(rotation = 60)
plt.show()

"""**KDE plot for Ladder Score:**


*   we can observe that Sub-Saharan Africa has noticably larger probability density for least score(less than 5.5 approx).
*   Similarly, Western Europe has larger probability density for ladder score greater than 5.5 approx.
It is intresting to note that all North American countries have their ladder Scores above 6.


*   Central and eastern europe, and Latin America and Caribbean show similar scores, with the former faring well.

"""

plt.figure(figsize = (15, 8))
sns.kdeplot(data = df1 , x ='Ladder score' , hue = "Regional indicator")
#sns.kdeplot(df1['Logged GDP per capita'])
#sns.kdeplot(df1['Generosity'])

"""**Comparision By country In the form of Map.**"""

import plotly.express as px

fig = px.choropleth(df.sort_values("year"), locations = "Country name", color =  "Life Ladder", locationmode = "country names", animation_frame = "year")
fig.update_layout(title = "Life Ladder Comparision by Country")
fig.show()

"""Observing Europe:"""

df_westernEurope = df1.loc[df1['Regional indicator'] == "Western Europe"]
df_westernEurope.head()
eu_countries = df_westernEurope['Country name'].unique()

eu_countries

eu_countries.tolist()

dict = {}
df_eu = pd.DataFrame(dict)
for i in eu_countries:
  df3 = df.loc[df['Country name'] == i]
  df_eu = df_eu.append(df3)

df_eu

"""When we observe europe throughout the years, we can see that within europe,Northern European countries have higher Ladder Scores as compared to their Southern European peers."""

fig = px.choropleth(df_eu.sort_values("year"), locations = "Country name", color =  "Life Ladder", locationmode = "country names", animation_frame = "year")
fig.update_layout(title = "Life Ladder Comparision by Country")
fig.show()

fig = px.scatter(df , x = "Country name", y="Freedom to make life choices", color= "Life Ladder",animation_frame="year", animation_group="Country name", template="plotly_dark", hover_name="Country name", size_max=60)
fig.update_layout(title="Life Ladder and Freedom")
fig.show()

df.info()

fig = px.scatter(df , x = "Life Ladder", y="Generosity", color= "Country name",animation_frame="year", animation_group="Country name", template="plotly_dark", hover_name="Country name", size_max=60)
fig.update_layout(title="Life Ladder and Generosity")
fig.show()

